include autogen.mk

#
# objects
#

OBJ=	main.o							\
	arguments.o						\
	service/service.o					\
	server/tcp_server.o					\
	service/tcp/tcp_connection.o				\
	service/tcp/tcp_connection_text.o			\
	service/scheduled/scheduled_service.o			\
	services/orchestrator/orchestrator.o			\
	services/http/http.o					\
	services/http/http_connection.o				\
	services/http/http_handler_registry.o			\
	services/http/types/http_request.o			\
	services/http/types/http_headers.o			\
	services/http/types/http_response.o			\
	services/http/handlers/static_request_handler.o		\
	services/http/handlers/static_dir_request_handler.o	\
	util/embed/compressed_data.o				\
	contrib/simdjson/simdjson.o				\
	contrib/miniz/miniz.o

AUTOGENERATED_FILES=

all: neblina

#
# flags
#

CPPFLAGS=-Wall -MMD -I. -isystem contrib/simdjson -isystem contrib/miniz
CXXFLAGS=-std=c++23
LDFLAGS=-flto=auto

ifdef DEV
  CPPFLAGS += -O0 -ggdb
else ifdef PEDANTIC
  CPPFLAGS += -O0 -ggdb -fstack-protector-strong -fno-common -Wextra -Wpedantic -Wshadow -Wformat=2
  CXXFLAGS += -Weffc++ -Wnull-dereference -Wcast-align
  ifeq ($(CC),g++)
    CXXFLAGS += -fanalyzer -Wlogical-op -Wduplicated-cond -Wduplicated-branches
  endif
else
  CPPFLAGS += -O3 -ffast-math -march=native -flto -D_FORTIFY_SOURCE=2 -fstack-protector-strong -fno-common
endif

UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
  STAT_PRM="-f %z"
else
  STAT_PRM="-c %s"
endif

#
# autogenerated files
#

# JSON/C++ files: schema_file, output_dir, output_filename (without extension), ClassName, dependencies
$(call json2cpp,orchestratorSchema.json,services/orchestrator,orchestrator_config,OrchestratorConfig,\
services/orchestrator/orchestrator.o main.o)

$(call json2cpp,httpSchema.json,services/http,http_config,HttpConfig,\
services/http/http.o main.o)

# embedded files
services/orchestrator/orchestrator.o: services/orchestrator/orchestrator.gen.inc

services/http/http.o: services/http/http.gen.inc

#
# rules
#

contrib/simdjson/simdjson.o: contrib/simdjson/simdjson.cpp
	g++ -c -I. -O3 -ffast-math -march=native -flto -o $@ $^     # compile without warnings or deep checks

pedantic:
	$(MAKE) all PEDANTIC=1

dev:
	$(MAKE) all DEV=1

neblina: $(OBJ)
	g++ -o $@ $^ $(LDFLAGS)

clean:
	rm -f $(OBJ) $(OBJ:.o=.d) neblina *.gen.inc ${AUTOGENERATED_FILES}
	find . -name "*.gen.inc" -type f -delete

-include $(OBJ:.o=.d)

# vim:sts=8:ts=8:sw=8:expandtab
